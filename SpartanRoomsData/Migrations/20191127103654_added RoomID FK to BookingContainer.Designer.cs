// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpartanRoomsData;

namespace SpartanRoomsData.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191127103654_added RoomID FK to BookingContainer")]
    partial class addedRoomIDFKtoBookingContainer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SpartanRoomsData.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.BookingContainer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<bool>("isFull")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.ToTable("BookingContainers");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.CallenderDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScheduleID")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleID");

                    b.ToTable("CallenderDates");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.FreeHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DateId")
                        .HasColumnType("int");

                    b.Property<string>("Hour")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DateId");

                    b.ToTable("FreeHours");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.Reservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookingContainerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservationString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BookingContainerID");

                    b.HasIndex("RoomID");

                    b.HasIndex("StudentID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScheduleID")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("departmentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ScheduleID");

                    b.HasIndex("departmentID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.Schedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.UnlockInstruction", b =>
                {
                    b.Property<int>("UnlockInstructionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("UnlockType")
                        .HasColumnType("int");

                    b.HasKey("UnlockInstructionID");

                    b.HasIndex("RoomID");

                    b.ToTable("UnlockInstructions");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.BookingContainer", b =>
                {
                    b.HasOne("SpartanRoomsData.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpartanRoomsData.Models.CallenderDate", b =>
                {
                    b.HasOne("SpartanRoomsData.Models.Schedule", null)
                        .WithMany("Dates")
                        .HasForeignKey("ScheduleID");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.FreeHour", b =>
                {
                    b.HasOne("SpartanRoomsData.Models.CallenderDate", "Date")
                        .WithMany("FreeHours")
                        .HasForeignKey("DateId");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.Reservation", b =>
                {
                    b.HasOne("SpartanRoomsData.Models.BookingContainer", "BookingContainer")
                        .WithMany("Reservations")
                        .HasForeignKey("BookingContainerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SpartanRoomsData.Models.Room", "Room")
                        .WithMany("HistoryOfReservations")
                        .HasForeignKey("RoomID");

                    b.HasOne("SpartanRoomsData.Models.Student", "Student")
                        .WithMany("Reservations")
                        .HasForeignKey("StudentID");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.Room", b =>
                {
                    b.HasOne("SpartanRoomsData.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleID");

                    b.HasOne("SpartanRoomsData.Models.Department", "department")
                        .WithMany("Rooms")
                        .HasForeignKey("departmentID");
                });

            modelBuilder.Entity("SpartanRoomsData.Models.UnlockInstruction", b =>
                {
                    b.HasOne("SpartanRoomsData.Models.Room", null)
                        .WithMany("UnlockInstructions")
                        .HasForeignKey("RoomID");
                });
#pragma warning restore 612, 618
        }
    }
}
